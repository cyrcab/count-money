name: CI

on:
  pull_request:
    branches:
      - 'develop'

permissions:
  contents: read

jobs:
  backend:
    if: github.repository == 'cyrcab/count-money'
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'mysql://user:password@localhost:3306/test_database'
      JWT_SECRET: "fakejwt"

    services:
      db:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PASSWORD: password
          MYSQL_USER: user
          MYSQL_DATABASE: test_database
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s
      redis:
        image: redis:latest
        ports:
          - '6379:6379'
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 6
    strategy:
      matrix:
        node-version: [20.x]

    name: Test on OTP ${{matrix.node-version}}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Init database
        run: sudo /etc/init.d/mysql start

      - run: npm ci
      - run: npm run lint:back
      - run: npm run test

  frontend:
    if: github.repository == 'cyrcab/count-money'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - run: npm ci
      - run: npm run lint:front
      - run: npm run build:front
